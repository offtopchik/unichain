#!/bin/bash

# –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç unichain.sh
cat << 'EOF' > unichain.sh
#!/bin/bash

# –¶–≤–µ—Ç–∞ —Ç–µ–∫—Å—Ç–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
NC='\033[0m' # –ù–µ—Ç —Ü–≤–µ—Ç–∞

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –Ω–æ–¥–æ–π
function install_node() {
    echo -e "${CYAN}>> –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–¥—É...${NC}"
    sudo apt update && sudo apt upgrade -y
    sudo apt install -y git curl build-essential python3 python3-pip
    curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
    sudo apt install -y nodejs
    sudo apt install -y apt-transport-https ca-certificates software-properties-common
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
    echo "deb [arch=\$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \$(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
    sudo apt update
    sudo apt install -y docker-ce docker-ce-cli containerd.io
    sudo curl -L "https://github.com/docker/compose/releases/download/v2.20.2/docker-compose-\$(uname -s)-\$(uname -m)" -o /usr/local/bin/docker-compose
    sudo chmod +x /usr/local/bin/docker-compose
    git clone https://github.com/Uniswap/unichain-node.git || echo "–†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —É–∂–µ –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω"
    cd unichain-node || exit
    npm install
    npm run start &
    echo -e "${GREEN}>> –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –ù–æ–¥–∞ –∑–∞–ø—É—â–µ–Ω–∞.${NC}"
}

function restart_node() {
    echo -e "${YELLOW}>> –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –Ω–æ–¥—É...${NC}"
    cd unichain-node || { echo -e "${RED}–ö–∞—Ç–∞–ª–æ–≥ unichain-node –Ω–µ –Ω–∞–π–¥–µ–Ω!${NC}"; return; }
    npm run stop || echo "–ù–æ–¥–∞ –Ω–µ –±—ã–ª–∞ –∑–∞–ø—É—â–µ–Ω–∞."
    npm run start &
    echo -e "${GREEN}>> –ù–æ–¥–∞ —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω–∞.${NC}"
}

function stop_node() {
    echo -e "${RED}>> –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–¥—É...${NC}"
    cd unichain-node || { echo -e "${RED}–ö–∞—Ç–∞–ª–æ–≥ unichain-node –Ω–µ –Ω–∞–π–¥–µ–Ω!${NC}"; return; }
    npm run stop
    echo -e "${GREEN}>> –ù–æ–¥–∞ —É—Å–ø–µ—à–Ω–æ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.${NC}"
}

function check_node() {
    echo -e "${BLUE}>> –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–æ–¥—ã...${NC}"
    docker ps
}

function view_logs_op() {
    echo -e "${CYAN}>> –õ–æ–≥–∏ Unichain OP (–Ω–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –≤—ã—Ö–æ–¥–∞)...${NC}"
    docker logs --follow unichain-op
}

function view_logs_unichain() {
    echo -e "${CYAN}>> –õ–æ–≥–∏ Unichain (–Ω–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –≤—ã—Ö–æ–¥–∞)...${NC}"
    docker logs --follow unichain
}

function view_private_key() {
    echo -e "${BLUE}>> –ü—Ä–æ—Å–º–æ—Ç—Ä –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –∫–ª—é—á–∞...${NC}"
    cd unichain-node || { echo -e "${RED}–ö–∞—Ç–∞–ª–æ–≥ unichain-node –Ω–µ –Ω–∞–π–¥–µ–Ω!${NC}"; return; }
    if [ -f .env ]; then
        grep PRIVATE_KEY .env | cut -d '=' -f2
    else
        echo -e "${RED}–§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç.${NC}"
    fi
}

function change_private_key() {
    echo -e "${YELLOW}>> –ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –∫–ª—é—á–∞...${NC}"
    cd unichain-node || { echo -e "${RED}–ö–∞—Ç–∞–ª–æ–≥ unichain-node –Ω–µ –Ω–∞–π–¥–µ–Ω!${NC}"; return; }
    if [ ! -f .env ]; then
        echo -e "${YELLOW}–§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π...${NC}"
        touch .env
    fi
    read -p "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á: " new_key
    if grep -q PRIVATE_KEY .env; then
        sed -i "s/^PRIVATE_KEY=.*/PRIVATE_KEY=$new_key/" .env
    else
        echo "PRIVATE_KEY=$new_key" >> .env
    fi
    echo -e "${GREEN}>> –ü—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω.${NC}"
}

# –ö—Ä–∞—Å–∏–≤–æ–µ –º–µ–Ω—é
while true; do
    clear
    echo -e "${CYAN}============================================${NC}"
    echo -e "${CYAN}       üåü –ú–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è Unichain Node üåü${NC}"
    echo -e "${CYAN}============================================${NC}"
    echo -e "${GREEN}1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–æ–¥—É${NC}"
    echo -e "${GREEN}2. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –Ω–æ–¥—É${NC}"
    echo -e "${GREEN}3. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–æ–¥—É${NC}"
    echo -e "${GREEN}4. –õ–æ–≥–∏ Unichain OP${NC}"
    echo -e "${GREEN}5. –õ–æ–≥–∏ Unichain${NC}"
    echo -e "${GREEN}6. –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–æ–¥—É${NC}"
    echo -e "${GREEN}7. –ü—Ä–æ—Å–º–æ—Ç—Ä –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –∫–ª—é—á–∞${NC}"
    echo -e "${GREEN}8. –ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á${NC}"
    echo -e "${RED}9. –í—ã–π—Ç–∏${NC}"
    echo -e "${CYAN}============================================${NC}"
    read -p "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ (1-9): " choice

    case $choice in
        1) install_node ;;
        2) restart_node ;;
        3) check_node ;;
        4) view_logs_op ;;
        5) view_logs_unichain ;;
        6) stop_node ;;
        7) view_private_key ;;
        8) change_private_key ;;
        9) echo -e "${RED}–í—ã—Ö–æ–¥ –∏–∑ —Å–∫—Ä–∏–ø—Ç–∞.${NC}"; break ;;
        *) echo -e "${RED}–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ—Ç 1 –¥–æ 9.${NC}" ;;
    esac
    read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é..."
done
EOF

# –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–ø—Ç –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–º
chmod +x unichain.sh

echo -e "${GREEN}–°–∫—Ä–∏–ø—Ç 'unichain.sh' —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!${NC}"
echo -e "–ó–∞–ø—É—Å—Ç–∏—Ç–µ –µ–≥–æ —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã: ${CYAN}bash unichain.sh${NC}"
