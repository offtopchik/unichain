#!/bin/bash

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED="\033[0;31m"
GREEN="\033[0;32m"
BLUE="\033[0;34m"
YELLOW="\033[1;33m"
CYAN="\033[0;36m"
RESET="\033[0m"

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ª–æ–≥–æ—Ç–∏–ø–∞
channel_logo() {
  echo -e "${CYAN}"
  echo "========================================"
  echo "üöÄ Welcome to the Unichain Node Manager üöÄ"
  echo "========================================"
  echo -e "${RESET}"
}

# –§—É–Ω–∫—Ü–∏–∏
download_node() {
  echo -e "${GREEN}–ù–∞—á–∏–Ω–∞—é —É—Å—Ç–∞–Ω–æ–≤–∫—É...${RESET}"

  sudo apt update -y && sudo apt upgrade -y
  sudo apt-get install make build-essential unzip lz4 gcc git jq -y

  sudo apt install docker.io -y

  sudo systemctl start docker
  sudo systemctl enable docker

  sudo curl -L "https://github.com/docker/compose/releases/download/v2.20.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
  sudo chmod +x /usr/local/bin/docker-compose

  git clone https://github.com/Uniswap/unichain-node
  cd unichain-node || { echo -e "${RED}–ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –∑–∞–π—Ç–∏ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é${RESET}"; return; }
  sudo docker-compose up -d

  echo -e "${GREEN}–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –ù–æ–¥–∞ –∑–∞–ø—É—â–µ–Ω–∞.${RESET}"
}

restart_node() {
  HOMEDIR="$HOME"
  echo -e "${YELLOW}–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞—é –Ω–æ–¥—É...${RESET}"
  sudo docker-compose -f "${HOMEDIR}/unichain-node/docker-compose.yml" down
  sudo docker-compose -f "${HOMEDIR}/unichain-node/docker-compose.yml" up -d
  echo -e "${GREEN}Unichain –±—ã–ª –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω.${RESET}"
}

check_node() {
  echo -e "${BLUE}–ü—Ä–æ–≤–µ—Ä—è—é –Ω–æ–¥—É...${RESET}"
  response=$(curl -s -d '{"id":1,"jsonrpc":"2.0","method":"eth_getBlockByNumber","params":["latest",false]}' \
    -H "Content-Type: application/json" http://localhost:8545)

  if [[ -n "$response" ]]; then
    echo -e "${GREEN}RESPONSE:${RESET} $response"
  else
    echo -e "${RED}–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –Ω–æ–¥–µ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.${RESET}"
  fi
}

check_logs_op_node() {
  echo -e "${CYAN}–õ–æ–≥–∏ Unichain (OP):${RESET}"
  sudo docker logs unichain-node-op-node-1
}

check_logs_unichain() {
  echo -e "${CYAN}–õ–æ–≥–∏ Unichain:${RESET}"
  sudo docker logs unichain-node-execution-client-1
}

stop_node() {
  HOMEDIR="$HOME"
  echo -e "${YELLOW}–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –Ω–æ–¥—É...${RESET}"
  sudo docker-compose -f "${HOMEDIR}/unichain-node/docker-compose.yml" down
  echo -e "${GREEN}–ù–æ–¥–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.${RESET}"
}

display_private_key() {
  echo -e "${YELLOW}–í–∞—à –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á:${RESET}"
  cat "$HOME/unichain-node/geth-data/geth/nodekey" 2>/dev/null || echo -e "${RED}–ü—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω.${RESET}"
}

change_private_key() {
  KEY_PATH="$HOME/unichain-node/geth-data/geth/nodekey"
  if [ ! -f "$KEY_PATH" ]; then
    echo -e "${RED}–§–∞–π–ª –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –∫–ª—é—á–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—É—Ç—å –∏ –Ω–∞–ª–∏—á–∏–µ –Ω–æ–¥—ã.${RESET}"
    return
  fi

  read -p "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á: " new_key
  if [[ -z "$new_key" ]]; then
    echo -e "${RED}–ü—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º.${RESET}"
    return
  fi

  echo "$new_key" >"$KEY_PATH"
  echo -e "${GREEN}–ü—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω.${RESET}"

  # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –Ω–æ–¥—ã –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π
  echo -e "${YELLOW}–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞—é –Ω–æ–¥—É –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –∫–ª—é—á–∞...${RESET}"
  stop_node
  restart_node
}

exit_from_script() {
  echo -e "${CYAN}–°–ø–∞—Å–∏–±–æ –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ! –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!${RESET}"
  exit 0
}

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
while true; do
  clear
  channel_logo
  echo -e "\n${YELLOW}–ú–µ–Ω—é:${RESET}"
  echo -e "${GREEN}1. üöÄ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–æ–¥—É${RESET}"
  echo -e "${GREEN}2. üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –Ω–æ–¥—É${RESET}"
  echo -e "${GREEN}3. ‚úÖ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–æ–¥—É${RESET}"
  echo -e "${GREEN}4. üìú –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª–æ–≥–∏ Unichain (OP)${RESET}"
  echo -e "${GREEN}5. üìú –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª–æ–≥–∏ Unichain${RESET}"
  echo -e "${GREEN}6. üõë –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–æ–¥—É${RESET}"
  echo -e "${GREEN}7. üîë –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á${RESET}"
  echo -e "${GREEN}8. üîÑ –ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á${RESET}"
  echo -e "${RED}9. ‚ùå –í—ã–π—Ç–∏ –∏–∑ —Å–∫—Ä–∏–ø—Ç–∞${RESET}\n"

  read -p "–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é: " choice

  case $choice in
  1)
    download_node
    ;;
  2)
    restart_node
    ;;
  3)
    check_node
    ;;
  4)
    check_logs_op_node
    ;;
  5)
    check_logs_unichain
    ;;
  6)
    stop_node
    ;;
  7)
    display_private_key
    ;;
  8)
    change_private_key
    ;;
  9)
    exit_from_script
    ;;
  *)
    echo -e "${RED}–ù–µ–≤–µ—Ä–Ω—ã–π –ø—É–Ω–∫—Ç. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ü–∏—Ñ—Ä—É –∏–∑ –º–µ–Ω—é.${RESET}"
    sleep 2
    ;;
  esac

  echo -e "\n${BLUE}–ù–∞–∂–º–∏—Ç–µ Enter, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é...${RESET}"
  read
done
