#!/bin/bash

# –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç unichain.sh
cat << 'EOF' > unichain.sh
#!/bin/bash

# –¶–≤–µ—Ç–∞ —Ç–µ–∫—Å—Ç–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
NC='\033[0m' # –°–±—Ä–æ—Å —Ü–≤–µ—Ç–∞

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–æ–¥—ã
function install_node() {
    echo -e "${CYAN}>> –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–∏—Å—Ç–µ–º—É –∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏...${NC}"
    sudo apt update && sudo apt upgrade -y
    sudo apt install -y git curl build-essential python3 python3-pip

    echo -e "${CYAN}>> –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker...${NC}"
    sudo apt install -y apt-transport-https ca-certificates software-properties-common
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
    sudo apt update
    sudo apt install -y docker-ce docker-ce-cli containerd.io

    echo -e "${CYAN}>> –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker Compose...${NC}"
    sudo curl -L "https://github.com/docker/compose/releases/download/v2.20.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
    sudo chmod +x /usr/local/bin/docker-compose

    echo -e "${CYAN}>> –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–∞—Ç–∞–ª–æ–≥–∞ unichain-node...${NC}"
    if [ -d "unichain-node" ]; then
        echo -e "${YELLOW}–ö–∞—Ç–∞–ª–æ–≥ 'unichain-node' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –£–¥–∞–ª—è–µ–º...${NC}"
        rm -rf unichain-node
    fi

    echo -e "${CYAN}>> –ö–ª–æ–Ω–∏—Ä—É–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π Unichain Node...${NC}"
    git clone https://github.com/Uniswap/unichain-node.git || { echo -e "${RED}–û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è!${NC}"; exit 1; }

    cd unichain-node || { echo -e "${RED}–û—à–∏–±–∫–∞: –∫–∞—Ç–∞–ª–æ–≥ unichain-node –Ω–µ –Ω–∞–π–¥–µ–Ω!${NC}"; exit 1; }

    echo -e "${CYAN}>> –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–æ–≤ genesis-l2.json –∏ rollup.json...${NC}"
    if [ -f "genesis-l2.json" ] && [ -f "rollup.json" ]; then
        echo -e "${GREEN}–§–∞–π–ª—ã 'genesis-l2.json' –∏ 'rollup.json' –Ω–∞–π–¥–µ–Ω—ã.${NC}"
    else
        echo -e "${RED}–û–¥–∏–Ω –∏–ª–∏ –æ–±–∞ —Ñ–∞–π–ª–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π.${NC}"
        exit 1
    fi

    echo -e "${CYAN}>> –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —Ñ–∞–π–ª–æ–≤
function view_files() {
    echo -e "${CYAN}>> –ü—Ä–æ—Å–º–æ—Ç—Ä —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ genesis-l2.json...${NC}"
    if [ -f "unichain-node/genesis-l2.json" ]; then
        cat unichain-node/genesis-l2.json
    else
        echo -e "${RED}–§–∞–π–ª genesis-l2.json –Ω–µ –Ω–∞–π–¥–µ–Ω.${NC}"
    fi

    echo -e "${CYAN}>> –ü—Ä–æ—Å–º–æ—Ç—Ä —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ rollup.json...${NC}"
    if [ -f "unichain-node/rollup.json" ]; then
        cat unichain-node/rollup.json
    else
        echo -e "${RED}–§–∞–π–ª rollup.json –Ω–µ –Ω–∞–π–¥–µ–Ω.${NC}"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —Ñ–∞–π–ª–æ–≤
function edit_files() {
    echo -e "${YELLOW}>> –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ genesis-l2.json...${NC}"
    if [ -f "unichain-node/genesis-l2.json" ]; then
        nano unichain-node/genesis-l2.json
    else
        echo -e "${RED}–§–∞–π–ª genesis-l2.json –Ω–µ –Ω–∞–π–¥–µ–Ω.${NC}"
    fi

    echo -e "${YELLOW}>> –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ rollup.json...${NC}"
    if [ -f "unichain-node/rollup.json" ]; then
        nano unichain-node/rollup.json
    else
        echo -e "${RED}–§–∞–π–ª rollup.json –Ω–µ –Ω–∞–π–¥–µ–Ω.${NC}"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–æ–¥—ã
function stop_node() {
    echo -e "${RED}>> –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–¥—É...${NC}"
    cd unichain-node || { echo -e "${RED}–ö–∞—Ç–∞–ª–æ–≥ unichain-node –Ω–µ –Ω–∞–π–¥–µ–Ω!${NC}"; return; }
    echo -e "${GREEN}–ù–æ–¥–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –Ω–æ–¥—ã
function check_node() {
    echo -e "${BLUE}>> –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–æ–¥—ã...${NC}"
    docker ps
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –∫–ª—é—á–∞
function view_private_key() {
    echo -e "${CYAN}>> –ü—Ä–æ—Å–º–æ—Ç—Ä –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –∫–ª—é—á–∞...${NC}"
    if [ -f "unichain-node/nodekey" ]; then
        cat unichain-node/nodekey
    else
        echo -e "${RED}–§–∞–π–ª nodekey –Ω–µ –Ω–∞–π–¥–µ–Ω.${NC}"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –∫–ª—é—á–∞
function change_private_key() {
    echo -e "${YELLOW}>> –ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –∫–ª—é—á–∞...${NC}"
    if [ -f "unichain-node/nodekey" ]; then
        nano unichain-node/nodekey
    else
        echo -e "${RED}–§–∞–π–ª nodekey –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞—é...${NC}"
        touch unichain-node/nodekey
        nano unichain-node/nodekey
    fi
}

# –ö—Ä–∞—Å–∏–≤–æ–µ –º–µ–Ω—é
while true; do
    clear
    echo -e "${CYAN}============================================${NC}"
    echo -e "${CYAN}       üåü –ú–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è Unichain Node üåü${NC}"
    echo -e "${CYAN}============================================${NC}"
    echo -e "${GREEN}1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–æ–¥—É${NC}"
    echo -e "${GREEN}2. –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ñ–∞–π–ª—ã genesis-l2.json –∏ rollup.json${NC}"
    echo -e "${GREEN}3. –ò–∑–º–µ–Ω–∏—Ç—å —Ñ–∞–π–ª—ã genesis-l2.json –∏ rollup.json${NC}"
    echo -e "${GREEN}4. –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–æ–¥—É${NC}"
    echo -e "${GREEN}5. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–æ–¥—ã${NC}"
    echo -e "${GREEN}6. –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á${NC}"
    echo -e "${GREEN}7. –ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á${NC}"
    echo -e "${RED}8. –í—ã–π—Ç–∏${NC}"
    echo -e "${CYAN}============================================${NC}"
    read -p "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ (1-8): " choice

    case $choice in
        1) install_node ;;
        2) view_files ;;
        3) edit_files ;;
        4) stop_node ;;
        5) check_node ;;
        6) view_private_key ;;
        7) change_private_key ;;
        8) echo -e "${RED}–í—ã—Ö–æ–¥ –∏–∑ —Å–∫—Ä–∏–ø—Ç–∞.${NC}"; break ;;
        *) echo -e "${RED}–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ—Ç 1 –¥–æ 8.${NC}" ;;
    esac
    read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é..."
done
EOF

# –î–µ–ª–∞–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–º
chmod +x unichain.sh

# –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º —Å–æ–∑–¥–∞–Ω–∏–∏ –∏ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫ –º–µ–Ω—é
echo -e "${GREEN}–°–∫—Ä–∏–ø—Ç 'unichain.sh' —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!${NC}"
echo -e "–ó–∞–ø—É—Å–∫–∞–µ–º –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è..."
bash unichain.sh
